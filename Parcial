import os, requests, re

def extraer_datos_archivo(file_path):
    try:
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as file:
            content = file.read()
            regexExpresion = r"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).*?\b[A-Z]{3,7}\b\s(.*?)\s.*?(\d{3})"
            regex = re.findall(regexExpresion, content, re.MULTILINE)
            return regex
    except Exception as e:
        print(f"Error capturando datos de {file_path}: {e}")
        return None

def consultar_api(info_extraida):
    resultados = []
    if not info_extraida:
        print("No se encontraron datos relevantes.")
        return resultados

    base_url = "http://ip-api.com/json/"
    ips_procesadas = set()

    for direccion_ip, recurso, codigo_http in info_extraida:
        if direccion_ip in ips_procesadas:
            continue
        ips_procesadas.add(direccion_ip)

        item = {
            "ip": direccion_ip,
            "path": recurso,
            "code": codigo_http
        }

        try:
            resp = requests.get(f"{base_url}{direccion_ip}")
            datos_api = resp.json()
            item["country"] = datos_api.get("country")
            item["city"] = datos_api.get("city")
        except:
            item["country"] = None
            item["city"] = None

        resultados.append(item)

    return resultados

# Carpeta donde estan los archivos
carpeta = "C:\\Users\\julia\\Downloads\\SotM34\\http"

# Recorrer todos los archivos en el directorio
for nombre_archivo in os.listdir(carpeta):
    ruta_completa = os.path.join(carpeta, nombre_archivo)
    if not os.path.isfile(ruta_completa):
        continue

    print(f"\nAnalizando: {nombre_archivo}")
    datos_extraidos = extraer_datos_archivo(ruta_completa)
    resultados_api = consultar_api(datos_extraidos)

    if resultados_api:
        print(f"{'IP':<16} {'País':<20} {'Código':<10} {'Descripción del error'}")
        print("-" * 70)
        for r in resultados_api:
            ip = r.get("ip", "N/A")
            pais = r.get("country") or "Desconocido"
            codigo = int(r.get("code", 0))

            if codigo == 401:
                descripcion = "Intento fallido de inicio de sesión"
            elif codigo == 403:
                descripcion = "Acceso bloqueado (posible firewall)"
            elif codigo == 404:
                descripcion = "Acceso inusual o solicitud sospechosa"
            elif 500 <= codigo <= 599:
                descripcion = "Posibles alertas de seguridad"
            else:
                continue

            print(f"{ip:<16} {pais:<20} {codigo:<10} {descripcion}")
